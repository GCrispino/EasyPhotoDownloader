{"version":3,"sources":["DownloadStatus.js","Photo.js","Album.js","UserPage.js","DriveButton.js","LoginPage.js","App.js","registerServiceWorker.js","index.js"],"names":["props","photosToDownload","nAllPhotos","map","album","photos","reduce","a","b","concat","length","downloadedPhotos","filter","photo","downloaded","getDownloadedPhotos","className","Photo","state","open","displayImage","bind","close","e","preventDefault","this","setState","smallestImage","images","handleClick","onClick","id","onChange","handleChange","name","type","checked","size","onClose","Header","Content","style","textAlign","src","source","alt","width","height","Actions","negative","icon","labelPosition","content","React","Component","Album","collapsed","active","toggleCollapse","toggleActive","onAlbumChange","index","i","key","onPhotoChange","fluid","Title","UserPage","getZipFile","downloadedAlbumsInfo","zip","jszip","forEach","albumInfo","folder","photoData","file","blob","downloadInfo","generateAsync","then","downloading","downloadedContentBlob","Promise","resolve","downloadImagesAndGetZipFile","downloadImages","catch","console","error","closeModal","openModal","initialUserAlbums","loaded","downloadingAlbumIndex","downloadingPhotoIndex","handleAlbumChange","handlePhotoChange","downloadImagesAndSaveZipFile","assignNewCheckedPhotosToArray","createInitialState","userAlbums","newCheckedPhotos","Object","assign","userId","accessToken","fetchURL","window","location","hostname","reject","fetch","response","json","albums","albumIndex","newUserAlbums","newDownloadInfo","photoDivElem","target","parentNode","parseInt","match","slice","photoIndex","curState","isPhotoChecked","newPhotos","userAlbum","newUserAlbum","albumChecked","indexOf","checkedAlbum","newCheckedAlbum","checkedPhoto","photoObject","j","checkedPhotos","filterCheckedPhotos","promises","push","all","fetchPhoto","newPhotosToDownload","markPhotoAsDownloaded","albumPhotosData","aElement","document","createElement","objectURL","URL","createObjectURL","display","href","download","body","appendChild","click","err","DownloadStatus","Fragment","LoginPage","rotate","color","handleLogin","App","protocol","appId","loggedIn","sdkLoaded","statusChangeCallback","self","d","s","js","fjs","getElementsByTagName","getElementById","insertBefore","addEventListener","FB","log","authResponse","userID","login","scope","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","process","origin","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2af8eef0.chunk.js","sourcesContent":["import React from \"react\";\nimport Loader from \"react-loader\";\n\nfunction getDownloadedPhotos(photosToDownload) {\n  return photosToDownload\n    .map(album => album.photos)\n    .reduce((a, b) => a.concat(b), [])\n    .filter(photo => photo.downloaded);\n}\n\nexport default function(props) {\n  const { photosToDownload } = props;\n  const nAllPhotos = photosToDownload\n    .map(album => album.photos)\n    .reduce((a, b) => a.concat(b), []).length;\n\n  const downloadedPhotos = getDownloadedPhotos(photosToDownload);\n  return (\n    <div className=\"downloadStatus\">\n      <Loader />\n      <h3>Downloading...(please wait)</h3>\n      <h4>\n        {downloadedPhotos.length} / {nAllPhotos} photos\n      </h4>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Modal } from \"semantic-ui-react\";\n\nclass Photo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n    this.displayImage = this.displayImage.bind(this);\n    this.close = this.close.bind(this);\n  }\n\n  open(e) {\n    e.preventDefault();\n    this.setState({ open: true });\n  }\n\n  close(e) {\n    e.preventDefault();\n    this.setState({ open: false });\n  }\n\n  previewImage(e) {\n    e.preventDefault();\n  }\n\n  displayImage() {}\n\n  render() {\n    const smallestImage = this.props.images[this.props.images.length - 1],\n      { open } = this.state;\n\n    this.handleClick = this.props.onClick;\n\n    return (\n      <div\n        id={this.props.id}\n        className=\"photo\"\n        onChange={this.props.handleChange}\n      >\n        <label>\n          {this.props.name ? this.props.name : \"*Photo without title*\"}\n        </label>\n        <input type=\"checkbox\" checked={this.props.checked} />\n        <Button className=\"photoButton\" onClick={this.open.bind(this)}>\n          Preview\n        </Button>\n\n        <Modal size=\"small\" open={open} onClose={this.close}>\n          <Modal.Header>{this.props.name}</Modal.Header>\n          <Modal.Content style={{ textAlign: \"center\" }}>\n            <img\n              src={smallestImage.source}\n              alt={this.props.name}\n              width={smallestImage.width}\n              height={smallestImage.height}\n              onClick={this.displayImage}\n            />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              negative\n              icon=\"remove\"\n              labelPosition=\"right\"\n              content=\"Close\"\n              onClick={this.close}\n            />\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Photo;\n","import React from \"react\";\nimport Photo from \"./Photo\";\nimport { Accordion, Icon } from \"semantic-ui-react\";\n\nclass Album extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: false,\n      active: false\n    };\n\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.toggleActive = this.toggleActive.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  toggleCollapse() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  toggleActive() {\n    this.setState({ active: !this.state.active });\n  }\n\n  handleChange(e) {\n    this.props.onAlbumChange(e, this.props.index);\n  }\n\n  render() {\n    const photos = this.props.photos.map((photo, i) => (\n        <Photo\n          key={i}\n          id={`photo${this.props.index}-${i}`}\n          name={photo.name}\n          images={photo.images}\n          checked={photo.checked}\n          handleChange={this.props.onPhotoChange}\n        />\n      )),\n      { active } = this.state;\n\n    return (\n      <div className=\"album\">\n        <Accordion fluid>\n          <Accordion.Title\n            active={active}\n            index={0}\n            onClick={this.toggleActive}\n          >\n            <Icon name=\"dropdown\" />\n            {this.props.name}\n          </Accordion.Title>\n          <input\n            type=\"checkbox\"\n            checked={this.props.checked}\n            onChange={this.handleChange}\n            id={\"album\" + this.props.index}\n          />\n          <Accordion.Content active={active}>\n            <div\n              className=\"collapse photoContainer\"\n              id={`photoContainer${this.props.index}`}\n            >\n              {photos}\n            </div>\n          </Accordion.Content>\n        </Accordion>\n      </div>\n    );\n  }\n}\n\nexport default Album;\n","import React from \"react\";\nimport DownloadStatus from \"./DownloadStatus\";\nimport jszip from \"jszip\";\nimport Loader from \"react-loader\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport Album from \"./Album\";\nimport DriveButton from \"./DriveButton\";\n\nclass UserPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initialUserAlbums = null;\n\n    this.state = {\n      loaded: false,\n      openModal: false,\n      downloadInfo: {\n        downloading: false,\n        downloadedContentBlob: null,\n        photosToDownload: null,\n        downloadingAlbumIndex: null,\n        downloadingPhotoIndex: null\n      }\n    };\n\n    this.handleAlbumChange = this.handleAlbumChange.bind(this);\n    this.handlePhotoChange = this.handlePhotoChange.bind(this);\n    this.getZipFile = this.getZipFile.bind(this);\n    this.downloadImages = this.downloadImages.bind(this);\n    this.downloadImagesAndGetZipFile = this.downloadImagesAndGetZipFile.bind(\n      this\n    );\n    this.downloadImagesAndSaveZipFile = this.downloadImagesAndSaveZipFile.bind(\n      this\n    );\n    this.assignNewCheckedPhotosToArray = this.assignNewCheckedPhotosToArray.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    this.createInitialState()\n      .then(userAlbums => {\n        this.initialUserAlbums = userAlbums;\n        this.setState({\n          userAlbums,\n          loaded: true\n        });\n      })\n      .catch(console.error);\n  }\n\n  assignNewCheckedPhotosToArray(photos, newCheckedPhotos) {\n    return photos.map((photo, i) =>\n      Object.assign(photo, {\n        checked: newCheckedPhotos[i]\n      })\n    );\n  }\n\n  createInitialState() {\n    const { userId, accessToken } = this.props,\n      fetchURL =\n        window.location.hostname === \"localhost\" ||\n        window.location.hostname === \"127.0.0.1\"\n          ? `http://localhost/getAlbums?userID=${userId}&access_token=${accessToken}`\n          : `https://easy-photo-downloader.herokuapp.com/getAlbums?userID=${userId}&access_token=${accessToken}`;\n\n    return new Promise((resolve, reject) => {\n      fetch(fetchURL)\n        .then(response => response.json())\n        .then(albums =>\n          resolve(\n            albums.map((album, i) => {\n              const photos = album.photos.map(photo =>\n                Object.assign(photo, {\n                  checked: false\n                })\n              );\n\n              return {\n                name: album.name,\n                index: i,\n                checked: false,\n                photos\n              };\n            })\n          )\n        )\n        .catch(reject);\n    });\n  }\n\n  handleAlbumChange(e, albumIndex) {\n    const { userAlbums, downloadInfo } = this.state;\n    const { photos } = userAlbums[albumIndex];\n    const newUserAlbums = userAlbums.map((album, i) =>\n      albumIndex === i\n        ? {\n            ...album,\n            photos: photos.map(photos => ({\n              ...photos,\n              checked: !album.checked\n            })),\n            checked: !album.checked\n          }\n        : album\n    );\n    const newDownloadInfo = {\n      ...downloadInfo,\n      downloadedContentBlob: null\n    };\n\n    this.setState({\n      userAlbums: newUserAlbums,\n      downloadInfo: newDownloadInfo\n    });\n  }\n\n  handlePhotoChange(e) {\n    const photoDivElem = e.target.parentNode;\n    const albumIndex = parseInt(\n      photoDivElem.id.match(/(\\d)*-/)[0].slice(0, -1),\n      10\n    );\n    const photoIndex = parseInt(\n      photoDivElem.id.match(/-(\\d)*/)[0].slice(1),\n      10\n    );\n\n    const curState = this.state;\n    const { photos } = curState.userAlbums[albumIndex];\n    const checkedPhotos = photos.map(photo => photo.checked);\n    const newCheckedPhotos = checkedPhotos.map(\n      //Logical XOR\n      (isPhotoChecked, i) => (i === photoIndex) !== isPhotoChecked\n    );\n\n    const newPhotos = this.assignNewCheckedPhotosToArray(\n      photos,\n      newCheckedPhotos\n    );\n\n    const newUserAlbums = curState.userAlbums.map((userAlbum, i) => {\n      let newUserAlbum;\n\n      if (i === albumIndex) {\n        const albumChecked = newCheckedPhotos.indexOf(true) !== -1;\n\n        newUserAlbum = {\n          ...userAlbum,\n          checked: albumChecked,\n          photos: newPhotos\n        };\n      } else newUserAlbum = userAlbum;\n\n      return newUserAlbum;\n    });\n\n    const { downloadInfo } = this.state;\n    const newDownloadInfo = {\n      ...downloadInfo,\n      downloadedContentBlob: null\n    };\n\n    this.setState({\n      userAlbums: newUserAlbums,\n      downloadInfo: newDownloadInfo\n    });\n  }\n\n  fetchPhoto(photo) {\n    return new Promise((resolve, reject) => {\n      fetch(photo.images[0].source)\n        .then(response => response.blob())\n        .then(blob =>\n          resolve({\n            name: `${photo.id}.jpg`,\n            blob\n          })\n        )\n        .catch(reject);\n    });\n  }\n\n  //Filter photos checked by user to download\n  filterCheckedPhotos(userAlbums) {\n    return userAlbums\n      .filter(album => album.checked) //gets checked albums\n      .map(checkedAlbum => {\n        /*\n         * maps checked albums in state to objects that contain the\n         * checked photos' urls\n         */\n        const newCheckedAlbum = {\n          name: checkedAlbum.name,\n          index: checkedAlbum.index,\n          checked: checkedAlbum.checked\n        };\n\n        //fetch the checked photos from 'this.state.userAlbums'\n        newCheckedAlbum.photos = checkedAlbum.photos\n          .map(photo => photo.checked)\n          .map((checkedPhoto, photoIndex) => {\n            if (checkedPhoto) {\n              const photoObject = this.state.userAlbums[checkedAlbum.index]\n                .photos[photoIndex];\n              return Object.assign(photoObject, { downloaded: false });\n            }\n            return null;\n          })\n          .filter(photo => (photo ? photo.checked : null)); //exclude undefineds\n\n        return newCheckedAlbum;\n      });\n  }\n\n  markPhotoAsDownloaded(photoIndex, albumIndex, photosToDownload) {\n    return photosToDownload.map((album, i) => {\n      return albumIndex === i\n        ? Object.assign(album, {\n            photos: album.photos.map((photo, j) =>\n              photoIndex === j\n                ? Object.assign(photo, { downloaded: true })\n                : photo\n            )\n          })\n        : album;\n    });\n  }\n\n  //downloads images and saves them to user\n  downloadImages() {\n    const { userAlbums } = this.state;\n    const checkedPhotos = this.filterCheckedPhotos(userAlbums);\n    const promises = [];\n    const { downloadInfo } = this.state;\n\n    if (checkedPhotos.length === 0) {\n      this.setState({\n        downloadInfo: {\n          ...downloadInfo,\n          downloading: false\n        }\n      });\n      return Promise.reject(\"No photos selected\");\n    }\n\n    return new Promise(resolve => {\n      this.setState(\n        {\n          downloadInfo: {\n            ...downloadInfo,\n            downloading: true,\n            photosToDownload: checkedPhotos\n          }\n        },\n        () => {\n          checkedPhotos.forEach((album, i) => {\n            promises.push(\n              new Promise((resolve, reject) => {\n                Promise.all(\n                  album.photos.map(\n                    (photo, j) =>\n                      new Promise((resolve, reject) => {\n                        // this.fetchPhotoToZipFolder(photo,folder)\n                        this.fetchPhoto(photo)\n                          .then(photoData => {\n                            const newPhotosToDownload = this.markPhotoAsDownloaded(\n                              j,\n                              i,\n                              this.state.downloadInfo.photosToDownload\n                            );\n                            const newDownloadInfo = Object.assign(\n                              this.state.downloadInfo,\n                              { photosToDownload: newPhotosToDownload }\n                            );\n                            this.setState({ downloadInfo: newDownloadInfo });\n                            resolve(photoData);\n                          })\n                          .catch(reject);\n                      })\n                  )\n                )\n                  .then(albumPhotosData => {\n                    resolve({\n                      name: album.name,\n                      photos: albumPhotosData\n                    });\n                  })\n                  .catch(reject);\n              })\n            );\n          });\n\n          resolve(Promise.all(promises));\n        }\n      );\n    });\n  }\n\n  getZipFile = downloadedAlbumsInfo => {\n    const zip = new jszip();\n\n    downloadedAlbumsInfo.forEach(albumInfo => {\n      const folder = zip.folder(albumInfo.name);\n\n      albumInfo.photos.forEach(photoData =>\n        folder.file(photoData.name, photoData.blob)\n      );\n    });\n\n    const { downloadInfo } = this.state;\n    return zip.generateAsync({ type: \"blob\" }).then(content => {\n      this.setState({\n        downloadInfo: {\n          downloading: false,\n          downloadedContentBlob: content,\n          photosToDownload: this.state.photosToDownload\n        }\n      });\n\n      return Promise.resolve(content);\n    });\n  };\n\n  downloadImagesAndGetZipFile = () =>\n    this.downloadImages()\n      .then(this.getZipFile)\n      .catch(console.error);\n\n  downloadImagesAndSaveZipFile() {\n    this.downloadImages()\n      .then(this.getZipFile)\n      .then(content => {\n        this.setState({\n          downloadInfo: {\n            downloading: false,\n            downloadedContentBlob: content,\n            photosToDownload: this.state.photosToDownload\n          }\n        });\n\n        const aElement = document.createElement(\"a\");\n        const objectURL = URL.createObjectURL(content);\n\n        aElement.style.display = \"none\";\n        aElement.href = objectURL;\n        aElement.download = \"photos.zip\";\n\n        document.body.appendChild(aElement);\n\n        aElement.click();\n      })\n      .catch(err => {\n        this.setState({\n          downloadInfo: {\n            downloading: false,\n            photosToDownload: this.state.photosToDownload\n          }\n        });\n        console.error(err);\n      });\n  }\n\n  getDownloadedPhotos() {\n    const { photosToDownload } = this.state.downloadInfo;\n\n    return photosToDownload\n      .map(album => album.photos)\n      .reduce((a, b) => a.concat(b), [])\n      .filter(photo => photo.downloaded);\n  }\n\n  closeModal = () => this.setState({ openModal: false });\n\n  render() {\n    const albums = this.state.loaded\n      ? this.state.userAlbums.map((album, i) => (\n          <Album\n            key={i}\n            index={i}\n            name={album.name}\n            photos={album.photos}\n            checked={album.checked}\n            onAlbumChange={this.handleAlbumChange}\n            onPhotoChange={this.handlePhotoChange}\n          />\n        ))\n      : null;\n\n    const { downloadInfo, openModal } = this.state,\n      { downloadedContentBlob } = downloadInfo;\n\n    return (\n      <div>\n        {this.state.loaded ? (\n          <div>\n            {downloadInfo.downloading ? (\n              <DownloadStatus\n                photosToDownload={downloadInfo.photosToDownload}\n              />\n            ) : (\n              <React.Fragment>\n                <form id=\"albumList\">{albums}</form>\n                <Button\n                  fluid\n                  onClick={this.downloadImagesAndSaveZipFile}\n                  className=\"downloadButton\"\n                >\n                  Download Photos!\n                </Button>\n              </React.Fragment>\n            )}\n\n            {/* <DriveButton\n\t\t\t\t\t\thidden={downloadInfo.downloading}\n\t\t\t\t\t\tdisabled={this.state.userAlbums && this.filterCheckedPhotos(this.state.userAlbums).length === 0}\n\t\t\t\t\t\tclassName='saveToDriveButton'\n\t\t\t\t\t\tdisplayWhenDownloading={false}\n\t\t\t\t\t\tdisplay='block'\n\t\t\t\t\t\tcontentToUpload={\n\t\t\t\t\t\t\tdownloadedContentBlob ?\n\t\t\t\t\t\t\t\t() => Promise.resolve(downloadedContentBlob)\n\t\t\t\t\t\t\t\t: this.downloadImagesAndGetZipFile\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonFinishUpload={() => this.setState({openModal: true})}\n\t\t\t\t\t/> */}\n          </div>\n        ) : (\n          <div>\n            <Loader />\n            <div style={{ textAlign: \"center\" }}>Loading...</div>\n          </div>\n        )}\n\n        <Modal size=\"small\" open={openModal} onClose={this.closeModal}>\n          <Modal.Header>Photos uploaded to Google Drive!</Modal.Header>\n          <Modal.Actions>\n            <Button\n              negative\n              icon=\"remove\"\n              labelPosition=\"right\"\n              content=\"Close\"\n              onClick={this.closeModal}\n            />\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\n/**\n * \"Save to Drive\" button component\n */\nclass DriveButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    /**\n     * API vars\n     */\n    this.CLIENT_ID =\n      \"901501021165-u55km00bs3m29v0lf8g4knccj4oacmik.apps.googleusercontent.com\";\n    this.API_KEY = \"AIzaSyDVpcXLh35yrymzXOzfZdCMsRdUsacUYxA\";\n    // Array of API discovery doc URLs for APIs used by the quickstart\n    this.DISCOVERY_DOCS = [\n      \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"\n    ];\n    // Authorization scopes required by the API; multiple scopes can be\n    // included, separated by spaces.\n    this.SCOPES = \"https://www.googleapis.com/auth/drive.file\";\n\n    this.state = {\n      signedIn: false,\n      signinIn: false,\n      content: undefined\n    };\n  }\n\n  componentWillMount() {\n    const script = document.createElement(\"script\");\n\n    script.src = \"https://apis.google.com/js/api.js\";\n    script.onload = this.handleClientLoad;\n\n    document.body.appendChild(script);\n  }\n\n  createFile = fileData => {\n    console.log(\"createFile!!! -> \", fileData);\n    const boundary = \"-------314159265358979323846\";\n    const delimiter = \"\\r\\n--\" + boundary + \"\\r\\n\";\n    const close_delim = \"\\r\\n--\" + boundary + \"--\";\n    const title = \"photos.zip\";\n    const { gapi } = this.state;\n\n    var reader = new FileReader();\n    reader.readAsBinaryString(fileData);\n\n    return new Promise(resolve => {\n      reader.onload = function(e) {\n        var contentType = fileData.type || \"application/octet-stream\";\n        var metadata = {\n          title,\n          mimeType: contentType\n        };\n\n        var base64Data = btoa(reader.result);\n        var multipartRequestBody =\n          delimiter +\n          \"Content-Type: application/json\\r\\n\\r\\n\" +\n          JSON.stringify(metadata) +\n          delimiter +\n          \"Content-Type: \" +\n          contentType +\n          \"\\r\\n\" +\n          \"Content-Transfer-Encoding: base64\\r\\n\" +\n          \"\\r\\n\" +\n          base64Data +\n          close_delim;\n\n        var request = gapi.client.request({\n          path: \"/upload/drive/v2/files\",\n          method: \"POST\",\n          params: { uploadType: \"multipart\" },\n          headers: {\n            \"Content-Type\": 'multipart/mixed; boundary=\"' + boundary + '\"'\n          },\n          body: multipartRequestBody\n        });\n\n        request.execute(resolve);\n      };\n    });\n  };\n\n  /**\n   *  On load, called to load the auth2 library and API client library.\n   */\n  handleClientLoad = () => {\n    this.setState({ gapi: window.gapi }, function() {\n      this.state.gapi.load(\"client:auth2\", this.initClient);\n    });\n  };\n\n  /**\n   *  Initializes the API client library and sets up sign-in state\n   *  listeners.\n   */\n  initClient = () => {\n    const self = this,\n      { gapi } = this.state;\n\n    gapi.client\n      .init({\n        apiKey: self.API_KEY,\n        clientId: self.CLIENT_ID,\n        discoveryDocs: self.DISCOVERY_DOCS,\n        scope: self.SCOPES\n      })\n      .then(function() {\n        // Listen for sign-in state changes.\n        gapi.auth2\n          .getAuthInstance()\n          .isSignedIn.listen(this.handleSigninStatusChange);\n\n        // Handle the initial sign-in state.\n        self.setState(\n          {\n            signedIn: gapi.auth2.getAuthInstance().isSignedIn.get()\n          },\n          function() {\n            console.log(\"mudou: \", self.state);\n          }\n        );\n      });\n  };\n\n  handleSigninStatusChange = isSignedIn => {\n    const { createFile } = this,\n      { content } = this.state,\n      setState = this.setState.bind(this);\n\n    if (!content) return;\n\n    setState({ uploading: true }, () => {\n      createFile(content).then(() => setState({ uploading: false }));\n    });\n  };\n\n  handleClick = () => {\n    const { contentToUpload, onFinishUpload } = this.props,\n      { createFile } = this,\n      { uploading } = this.state,\n      setState = this.setState.bind(this);\n\n    setState({ downloading: true });\n    contentToUpload().then(content => {\n      setState({ downloading: false });\n\n      const authInstance = this.state.gapi.auth2.getAuthInstance();\n      if (authInstance.isSignedIn)\n        setState({ uploading: true }, () => {\n          createFile(content).then(() =>\n            setState({ uploading: false, content }, onFinishUpload)\n          );\n        });\n      else authInstance.signIn();\n    });\n  };\n\n  render() {\n    const { downloading, uploading } = this.state,\n      { displayWhenDownloading, hidden, disabled } = this.props,\n      display = hidden\n        ? \"none\"\n        : downloading\n        ? !displayWhenDownloading\n          ? \"none\"\n          : this.props.display\n        : this.props.display;\n\n    return (\n      <Button\n        fluid\n        className={this.props.className}\n        style={{ display }}\n        disabled={disabled}\n        loading={uploading}\n        onClick={this.handleClick}\n      >\n        Save to Google Drive\n      </Button>\n    );\n  }\n}\n\nexport default DriveButton;\n","import React from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { rotate: false };\n  }\n\n  handleClick() {\n    this.setState({ rotate: !this.state.rotate });\n  }\n\n  render() {\n    return (\n      <div id=\"loginPage\">\n        <Button color=\"facebook\" onClick={this.props.handleLogin}>\n          <Icon name=\"facebook\" /> Continue with Facebook\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from \"react\";\nimport UserPage from \"./UserPage\";\nimport LoginPage from \"./LoginPage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (\n      window.location.hostname === \"gcrispino.github.io\" &&\n      window.location.protocol === \"http:\"\n    )\n      window.location.protocol = \"https:\";\n\n    const appId = \"1684103011832056\";\n\n    this.state = {\n      appId,\n      loggedIn: false,\n      sdkLoaded: true\n    };\n\n    this.statusChangeCallback = this.statusChangeCallback.bind(this);\n  }\n\n  componentDidMount() {\n    const self = this;\n\n    (function(d, s, id) {\n      let js,\n        fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = `//connect.facebook.net/pt_BR/sdk.js#xfbml=1&version=v6.0&appId=${self.state.appId}`;\n      fjs.parentNode.insertBefore(js, fjs);\n\n      js.addEventListener(\"load\", () => {\n        self.setState({\n          sdkLoaded: true,\n          FB: window.FB\n        });\n      });\n    })(document, \"script\", \"facebook-jssdk\");\n  }\n\n  // This is called with the results from from FB.getLoginStatus().\n  statusChangeCallback(response) {\n    // app know the current login status of the person.\n    console.log(\"statuschange\");\n    if (response.authResponse) {\n      const userId = response.authResponse.userID,\n        accessToken = response.authResponse.accessToken;\n\n      console.log(\"connected!\");\n      console.log(userId, accessToken);\n\n      this.setState({\n        loggedIn: true,\n        userId,\n        accessToken\n      });\n    } else {\n      console.log(\"User cancelled login or did not fully authorize.\");\n    }\n    // The response object is returned with a status field that lets the\n    // Full docs on the response object can be found in the documentation\n    // for FB.getLoginStatus().\n    //    if (response.status === \"connected\") {\n    //      // Logged into your app and Facebook.\n    //      const userId = response.authResponse.userID,\n    //        accessToken = response.authResponse.accessToken;\n    //\n    //      console.log(\"connected!\");\n    //      console.log(userId, accessToken);\n    //\n    //      this.setState({\n    //        loggedIn: true,\n    //        userId,\n    //        accessToken\n    //      });\n    //    } else if (response.status === \"not_authorized\") {\n    //      // The person is logged into Facebook, but not your app.\n    //      document.getElementById(\"status\").innerHTML =\n    //        \"Please log \" + \"into this app.\";\n    //    } else {\n    //      // The person is not logged into Facebook, so we're not sure if\n    //      // they are logged into this app or not.\n    //      document.getElementById(\"status\").innerHTML =\n    //        \"Please log \" + \"into Facebook.\";\n    //    }\n  }\n\n  handleLogin() {\n    window.FB.login(this.statusChangeCallback, { scope: \"user_photos\" });\n  }\n\n  render() {\n    const { userId, accessToken } = this.state;\n    const componentToRender = this.state.sdkLoaded ? (\n      this.state.loggedIn ? (\n        <UserPage userId={userId} accessToken={accessToken} />\n      ) : (\n        <LoginPage handleLogin={this.handleLogin.bind(this)} />\n      )\n    ) : (\n      <div>Loading FB info...</div>\n    );\n\n    return componentToRender;\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconsole.log(App);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}